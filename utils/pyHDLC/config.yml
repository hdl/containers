# Authors:
#   Unai Martinez-Corral
#
# Copyright 2021 Unai Martinez-Corral <unai.martinezcorral@ehu.eus>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

HDLC: 0


anchors:
  <<: &EmptyPkgTarget
    target: ''
  <<: &BaseDockerfile
    dockerfile: base
  <<: &FormalDockerfile
    dockerfile: formal
  <<: &ImplDockerfile
    dockerfile: impl
  <<: &NextpnrDockerfile
    dockerfile: nextpnr
  <<: &OSVBDockerfile
    dockerfile: osvb
  <<: &SymbiFlowDockerfile
    dockerfile: symbiflow
  <<: &SysDebianBullseyeAmd64
    debian/bullseye:
      - amd64
  <<: &SysDebianAmd64
    <<: *SysDebianBullseyeAmd64
    debian/buster:
      - amd64
  <<: &SysDebianDefaultArchSet
    <<: *SysDebianAmd64
    debian/bullseye:
      - amd64
      - arm64v8
      - ppc64le
      - s390x
      #- riscv64 ! for now, only 'sid-slim' is available in https://hub.docker.com/r/riscv64/debian


defaults:
  images:
    # Base
    build/base:  { <<: *BaseDockerfile, target: base }
    build/build: { <<: *BaseDockerfile, target: build }
    build/dev:   { <<: *BaseDockerfile }
    # Boolector
    pkg/boolector: *EmptyPkgTarget
    # CVC
    pkg/cvc: *EmptyPkgTarget
    # Formal
    formal/min: { <<: *FormalDockerfile, target: min }
    formal:     { <<: *FormalDockerfile, target: latest }
    formal/all: { <<: *FormalDockerfile }
    # GHDL
    ghdl/yosys:    { dockerfile: ghdl-yosys-plugin }
    pkg/ghdl:                        { target: pkg-mcode }
    pkg/ghdl/llvm: { dockerfile: ghdl, target: pkg-llvm }
    ghdl:                            { target: mcode }
    ghdl/llvm:     { dockerfile: ghdl, target: llvm }
    # Impl
    build/impl:      { <<: *ImplDockerfile, target: base }
    impl/ice40:      { <<: *ImplDockerfile, target: ice40 }
    impl/icestorm:   { <<: *ImplDockerfile, target: icestorm }
    impl/ecp5:       { <<: *ImplDockerfile, target: ecp5 }
    impl/prjtrellis: { <<: *ImplDockerfile, target: prjtrellis }
    impl/generic:    { <<: *ImplDockerfile, target: generic }
    impl/pnr:        { <<: *ImplDockerfile, target: pnr }
    # NextPnR
    build/nextpnr/base:  { <<: *NextpnrDockerfile, target: base }
    build/nextpnr/build: { <<: *NextpnrDockerfile, target: build }
    pkg/nextpnr/ice40:   { <<: *NextpnrDockerfile, target: pkg-ice40 }
    nextpnr/ice40:       { <<: *NextpnrDockerfile, target: ice40 }
    nextpnr/icestorm:    { <<: *NextpnrDockerfile, target: icestorm }
    pkg/nextpnr/nexus:   { <<: *NextpnrDockerfile, target: pkg-nexus }
    nextpnr/nexus:       { <<: *NextpnrDockerfile, target: nexus }
    nextpnr/prjoxide:    { <<: *NextpnrDockerfile, target: prjoxide }
    pkg/nextpnr/ecp5:    { <<: *NextpnrDockerfile, target: pkg-ecp5 }
    nextpnr/ecp5:        { <<: *NextpnrDockerfile, target: ecp5 }
    nextpnr/prjtrellis:  { <<: *NextpnrDockerfile, target: prjtrellis }
    pkg/nextpnr/generic: { <<: *NextpnrDockerfile, target: pkg-generic }
    nextpnr/generic:     { <<: *NextpnrDockerfile, target: generic }
    # Sim
    sim/osvb:
      <<: *OSVBDockerfile
    pkg/pono: *EmptyPkgTarget
    sim/scipy-slim:
      dockerfile: scipy
    sim/scipy:
      <<: *OSVBDockerfile
      argimg: sim/scipy-slim
    sim/octave-slim:
      dockerfile: octave
    sim/octave:
      <<: *OSVBDockerfile
      argimg: sim/octave-slim
    # SuperProve
    pkg/superprove: *EmptyPkgTarget
    # SymbiFlow:
    conda/symbiflow/xc7/toolchain: { <<: *SymbiFlowDockerfile, target: xc7-toolchain }
    conda/symbiflow/xc7/a50t:      { <<: *SymbiFlowDockerfile, target: a50t          }
    conda/symbiflow/xc7/a100t:     { <<: *SymbiFlowDockerfile, target: a100t         }
    conda/symbiflow/xc7/a200t:     { <<: *SymbiFlowDockerfile, target: a200t         }
    conda/symbiflow/xc7/z010:      { <<: *SymbiFlowDockerfile, target: z010          }
    conda/symbiflow/xc7/z020:      { <<: *SymbiFlowDockerfile, target: z020          }
    conda/symbiflow/xc7:           { <<: *SymbiFlowDockerfile, target: xc7           }
    conda/symbiflow/eos-s3:        { <<: *SymbiFlowDockerfile, target: eos-s3        }
    # SymbiYosys
    pkg/symbiyosys: *EmptyPkgTarget
    # Yices2
    pkg/yices2: *EmptyPkgTarget
    # Z3
    pkg/z3: *EmptyPkgTarget


jobs:

  default:
    apicula:        *SysDebianBullseyeAmd64
    arachne-pnr:    *SysDebianDefaultArchSet
    icestorm:       *SysDebianDefaultArchSet
    iverilog:       *SysDebianAmd64
    gtkwave:        *SysDebianDefaultArchSet
    klayout:        *SysDebianAmd64
    magic:          *SysDebianDefaultArchSet
    netgen:         *SysDebianDefaultArchSet
    openfpgaloader: *SysDebianDefaultArchSet
    prjoxide:       *SysDebianAmd64
    prjtrellis:     *SysDebianAmd64
    verilator:      *SysDebianDefaultArchSet
    vtr:            *SysDebianAmd64
    xyce:           *SysDebianAmd64
    yosys:          *SysDebianAmd64

  pkgonly:
    boolector:  *SysDebianAmd64
    cvc:        *SysDebianAmd64
    pono:       *SysDebianAmd64
    superprove: *SysDebianAmd64
    symbiyosys: *SysDebianAmd64
    yices2:     *SysDebianAmd64
    z3:         *SysDebianAmd64

  runonly:
    conda:                         *SysDebianBullseyeAmd64
    prog:                          *SysDebianAmd64
    sim:                           *SysDebianAmd64
    conda/symbiflow/xc7/toolchain: *SysDebianBullseyeAmd64
    conda/symbiflow/xc7:           *SysDebianBullseyeAmd64

  custom:
    base:
      images:
        - build/base
        - build/build
        - build/dev
      sys:
        <<: *SysDebianDefaultArchSet
        centos/7:
          - amd64
    formal:
      images:
        - formal/min
        - formal
        - formal/all
      sys: *SysDebianAmd64
    ghdl-yosys-plugin:
      images:
        - pkg/ghdl-yosys-plugin#ghdl
        - ghdl/yosys
      sys: *SysDebianAmd64
    ghdl:
      images:
        - pkg/ghdl
        - pkg/ghdl/llvm#ghdl
        - ghdl
        - ghdl/llvm
      sys: *SysDebianAmd64
    impl-build:
      images:
        - build/impl
      sys: *SysDebianAmd64
    impl-prjs:
      images:
        - impl/${arch}
        - impl/${prj}
        - { arch: ice40, prj: icestorm   }
        - { arch: ecp5,  prj: prjtrellis }
      sys: *SysDebianAmd64
    impl:
      images:
        - impl/generic
        - impl/pnr
        - impl
      sys: *SysDebianAmd64
    nextpnr-build:
      images:
        - build/nextpnr/base
        - build/nextpnr/build
      sys: *SysDebianAmd64
    nextpnr-prjs:
      images:
        - pkg/nextpnr/${arch}
        - nextpnr/${arch}
        - nextpnr/${prj}
        - { arch: ice40, prj: icestorm   }
        - { arch: ecp5,  prj: prjtrellis }
        - { arch: nexus, prj: prjoxide   }
      sys: *SysDebianAmd64
      exclude:
        - sys: { debian/buster: [amd64] }
          params: { arch: nexus, prj: prjoxide }
    nextpnr:
      images:
        - pkg/nextpnr/generic
        - nextpnr/generic
        - nextpnr
      sys: *SysDebianAmd64
    osvb:
      images:
        - pkg/osvb
        - sim/osvb
      sys: *SysDebianAmd64
    cosim:
      images:
        - sim/${prj}-slim
        - sim/${prj}
        - prj: scipy
        - prj: octave
      sys: *SysDebianAmd64
    symbiflow-xc7-devices:
      images:
        - [ conda/symbiflow/xc7/a50t  ]
        - [ conda/symbiflow/xc7/a100t ]
        - [ conda/symbiflow/xc7/a200t ]
        - [ conda/symbiflow/xc7/z010  ]
        - [ conda/symbiflow/xc7/z020  ]
      sys: *SysDebianBullseyeAmd64
    symbiflow-eos-s3:
      images:
        - conda/symbiflow/eos-s3
      sys: *SysDebianBullseyeAmd64
